<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<context:component-scan base-package="aopEx01" />
	<bean id="loggerAOP01" class="aopEx01.Aspect01"></bean>
	
	<!-- aop 설정 담을 수 있따 -->
	<!-- 참조는 빈만 -->
	<aop:config>
		<aop:aspect id="looger01" ref="loggerAOP01">
		<!--  특정클래스 within -->
		<!--  클래스명 가 ㅂ중복 되면 안된다  -->
			<aop:pointcut expression="within(aopEx01.A)" id="pointcutA" />
			<aop:pointcut expression="within(aopEx01.B)" id="pointcutB" />
			<aop:pointcut expression="within(aopEx01.C)" id="pointcutC"/>
			
		<!-- 	전과 후에 실행ㅎ하겟다  -->	
		<!-- 메소드 대,소문자 잘봐라 이 호구야 -->		
			<aop:around method="loggerAop01" pointcut-ref="pointcutA"/>
		
			<aop:before method="loggerAop02" pointcut-ref="pointcutB"/>
			
			
			<!-- 핵심로직 실행후 무조건 호출되는 공통 모듈 -->
			<!--  -->
			<!--  -->
			<!-- aop:after-returning -->
			<!-- 핵심로직이 오류가 발생하여 종료되었을떄 호출되는 공통모듈-->
			<aop:after-throwing method="loggerAop03" pointcut-ref="pointcutC"/>
		</aop:aspect>
	
	</aop:config>
</beans>
